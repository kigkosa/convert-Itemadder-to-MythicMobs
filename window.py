# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'gui.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import yaml
from PyQt5.QtWidgets import *
class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        MainWindow.setFixedSize(800, 600)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.textEdit = QtWidgets.QTextEdit(self.centralwidget)
        self.textEdit.setGeometry(QtCore.QRect(30, 120, 741, 361))
        self.textEdit.setObjectName("textEdit")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(80, 490, 111, 51))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.pushButton.setFont(font)
        self.pushButton.setObjectName("pushButton")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(30, 20, 61, 16))
        self.label.setObjectName("label")
        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit.setGeometry(QtCore.QRect(100, 20, 671, 20))
        self.lineEdit.setObjectName("lineEdit")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(30, 60, 61, 16))
        self.label_2.setObjectName("label_2")
        self.lineEdit_2 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_2.setGeometry(QtCore.QRect(100, 60, 671, 20))
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(30, 90, 61, 16))
        self.label_3.setObjectName("label_3")
        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_2.setGeometry(QtCore.QRect(320, 490, 111, 51))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.pushButton_2.setFont(font)
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_2.setEnabled(False)
        self.pushButton_3 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_3.setGeometry(QtCore.QRect(560, 490, 111, 51))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.pushButton_3.setFont(font)
        self.pushButton_3.setObjectName("pushButton_3")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "convert ia to mm"))
        self.pushButton.setText(_translate("MainWindow", "แปลงไฟล์"))
        self.label.setText(_translate("MainWindow", "Namespace"))
        self.label_2.setText(_translate("MainWindow", "type"))
        self.lineEdit_2.setText(_translate("MainWindow", "paper"))
        self.label_3.setText(_translate("MainWindow", "input data ia"))
        self.pushButton_2.setText(_translate("MainWindow", "กลับไปก่อนแปลง"))
        self.pushButton_3.setText(_translate("MainWindow", "ทดสอบ"))

        self.pushButton.clicked.connect(self.convert)
        self.pushButton_2.clicked.connect(self.back)
        self.pushButton_3.clicked.connect(self.convert_test)
    def convert_test(self):
        self.textEdit.setTextColor(QtGui.QColor("black"))
        #self.lineEdit.setText("diablo_skills")
        msg=QMessageBox()
        Lines = self.textEdit.toPlainText()
        namespace = self.lineEdit.text()
        types = self.lineEdit_2.text()


        intext  = ""
        if Lines == [''] or namespace == "" or types == "":
            msg.setIcon(QMessageBox.Critical)
            msg.setText("ข้อมูลไม่ครบ")
            msg.setWindowTitle("แจ้งเตือน")
            msg.exec_()
            return
        
        # li = yaml.full_load(Lines)



        try:
            item_yml = yaml.full_load(Lines)
            items = item_yml[types.upper()]
            intext = ""
            x =0
            for item in items:
                item_namespace = item.split(":")
                if item_namespace[0] == namespace:
                    intext += f"test_{x}:\n"
                    intext += f"  Id: {types}\n"
                    item_display = item_namespace[1].replace("_"," ")
                    intext += f"  Display: '{item_display}'\n"
                    intext += f"  Model: {items[item]}\n"
                    x =x+1
            self.textEdit.setText(intext)
            self.pushButton_2.setEnabled(True)
            self.savedata = Lines
        except:
            msg.setText("ผิดพลาด")
            msg.setWindowTitle("แจ้งเตือน")
            msg.setIcon(QMessageBox.Critical)
            msg.exec_()
    def back(self):                
        self.textEdit.setText(self.savedata)
        
    def convert(self):
        self.textEdit.setTextColor(QtGui.QColor("black"))
        #self.lineEdit.setText("diablo_skills")
        msg=QMessageBox()
        Lines = self.textEdit.toPlainText()
        namespace = self.lineEdit.text()
        types = self.lineEdit_2.text()


        intext  = ""
        if Lines == [''] or namespace == "" or types == "":
            msg.setIcon(QMessageBox.Critical)
            msg.setText("ข้อมูลไม่ครบ")
            msg.setWindowTitle("แจ้งเตือน")
            msg.exec_()
            return
        
        # li = yaml.full_load(Lines)



        try:
            item_yml = yaml.full_load(Lines)
            items = item_yml[types.upper()]
            intext = ""
            for item in items:
                item_namespace = item.split(":")
                if item_namespace[0] == namespace:
                    intext += item_namespace[1]+":\n"
                    intext += f"  Id: {types}\n"
                    item_display = item_namespace[1].replace("_"," ")
                    intext += f"  Display: '{item_display}'\n"
                    intext += f"  Model: {items[item]}\n"
            self.textEdit.setText(intext)
            self.pushButton_2.setEnabled(True)
            self.savedata = Lines
        except:
            msg.setText("ผิดพลาด")
            msg.setWindowTitle("แจ้งเตือน")
            msg.setIcon(QMessageBox.Critical)
            msg.exec_()
       
def iconFromBase64(base64):
    pixmap = QtGui.QPixmap()
    pixmap.loadFromData(QtCore.QByteArray.fromBase64(base64))
    icon = QtGui.QIcon(pixmap)
    return icon

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    image_base64 = b"iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAB60lEQVQ4jYWTz0uiQRjHv+9gixuyy0rWYSvDokudWqK6eF0pCuy0YIVBdA8qOmp/gG2nDkEUSyFEUEGRux3abiUJG0QFLkRl+mIG9stM7YmZcEJfyy8MPPM883mYeZ5nQAXkP/dT/3I/dS10UTAWLHRESpNgfGucmJtRzc8ait5F34UpP8FMYIbggliLB4tFYS5FZAGQzCRhnjBDvVNh1BuhjqjQMR2KiWXj2yfbAuZq/tpcED67PsPh5WGOTybYV/els+pTlQZOpBKwe+3omO/AVeJK+pVubzedxk8RugkhfBsWTlOpCdWfq2H8aISv1wcFCpzLTsz9mxNxW60Na441MIWBDX4bRCASkDBX9D6KvfAeBpoGBDzln5Iw18b/Dbi33C834EXkG9dfV86Vh1qH4Pnuwc75DqyzVjxmHnPfrjD4HL6XBE/0hM6FTqwH10XQarZis28TJawEtl82Ubh4Mi4Wl+GDQXSq7ksd5BzE7mNkmbRQpaeSIjcRTb/H/ozJGRn9PSr9sle8YCs/VpDKpFBhqNB0gRc5qwZTg7Rzmt1Y3qgBs9oN7QpTr9Ojvb79tRZvEnnwcexY2MNtwygrLXsNFpv1h/QDtUy3iLc7lhyUzqTf/kz5uri+oJ6lHrJ77bR6tKo9QETP2kbdbotB5BYAAAAASUVORK5CYII="

    icon = iconFromBase64(image_base64)
    MainWindow.setWindowIcon(icon)
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    
    MainWindow.show()
    sys.exit(app.exec_())
